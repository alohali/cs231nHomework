{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"inpu",
				"inputH"
			],
			[
				"hof",
				"hoff"
			],
			[
				"has",
				"hstart"
			],
			[
				"wof",
				"woff"
			],
			[
				"cof",
				"coff"
			],
			[
				"pr",
				"pragma"
			],
			[
				"loo",
				"LOOPNUM"
			],
			[
				"inp",
				"inputH"
			],
			[
				"tre",
				"ThreadPerWarp"
			],
			[
				"bl",
				"blockIdx"
			],
			[
				"thre",
				"ThreadPerWarp"
			],
			[
				"w",
				"warpid"
			],
			[
				"def",
				"define"
			],
			[
				"sho",
				"short"
			],
			[
				"ne",
				"new_val"
			],
			[
				"src",
				"src_ldg"
			],
			[
				"fla",
				"float2"
			],
			[
				"fl",
				"float2"
			],
			[
				"clas",
				"clast"
			],
			[
				"tha",
				"threadIdx"
			],
			[
				"sm",
				"smem_width"
			],
			[
				"bo",
				"blockIdx"
			],
			[
				"tr",
				"threadIdx"
			],
			[
				"the",
				"threadIdx"
			],
			[
				"ldg",
				"ldg_reg"
			],
			[
				"warp",
				"warpid"
			],
			[
				"dst",
				"dst_stg"
			],
			[
				"stg",
				"stg_hOffset"
			],
			[
				"blo",
				"blockIdx"
			],
			[
				"sme",
				"smem"
			],
			[
				"hl",
				"hBlock"
			],
			[
				"wapr",
				"warpid"
			],
			[
				"th",
				"threadIdx"
			],
			[
				"tes",
				"test3"
			],
			[
				"te",
				"test1"
			],
			[
				"layer",
				"layer"
			],
			[
				"get",
				"getMemOffset"
			],
			[
				"ge",
				"getMemOffset"
			],
			[
				"mem",
				"getMemOffset"
			],
			[
				"arg",
				"argv"
			],
			[
				"ar",
				"argc"
			],
			[
				"par",
				"parseHyperParam"
			],
			[
				"sp",
				"SplitParam"
			],
			[
				"ha",
				"hParam"
			],
			[
				"hal",
				"Halos"
			],
			[
				"ag",
				"argv"
			],
			[
				"div",
				"DIVIDEH"
			],
			[
				"RE",
				"ret"
			],
			[
				"al",
				"algo"
			],
			[
				"la",
				"layers"
			],
			[
				"in",
				"in_c"
			],
			[
				"outw",
				"outw"
			],
			[
				"out",
				"out_w"
			],
			[
				"ou",
				"outc"
			],
			[
				"name",
				"name0"
			],
			[
				"DIV",
				"DIVIDEW"
			],
			[
				"ot",
				"out_w"
			],
			[
				"di",
				"DIVIDEW"
			],
			[
				"pad",
				"padw"
			],
			[
				"TRU",
				"true"
			],
			[
				"is",
				"isEdgePart"
			],
			[
				"PART",
				"part"
			],
			[
				"DI",
				"DIVIDEW"
			],
			[
				"full",
				"fullParam"
			],
			[
				"siz",
				"size"
			],
			[
				"__ca",
				"__calc_divide"
			],
			[
				"re",
				"recombine"
			],
			[
				"ty",
				"type"
			],
			[
				"wei",
				"weight_size"
			],
			[
				"weig",
				"weightSize"
			],
			[
				"lay",
				"layers"
			],
			[
				"dfs",
				"dfsSplit"
			],
			[
				"q",
				"q0"
			],
			[
				"da",
				"datasize"
			],
			[
				"se",
				"self"
			],
			[
				"conv",
				"conv0"
			],
			[
				"typ",
				"Type"
			],
			[
				"dat",
				"data0"
			],
			[
				"con",
				"conv0"
			],
			[
				"poo",
				"pool0"
			],
			[
				"t",
				"type"
			],
			[
				"s",
				"successor"
			],
			[
				"no",
				"None"
			],
			[
				"l",
				"Layer"
			],
			[
				"a",
				"Animals"
			],
			[
				"sr",
				"srcb"
			],
			[
				"com",
				"compareOutput"
			],
			[
				"c",
				"compareOutputPart"
			],
			[
				"flo",
				"float"
			],
			[
				"ti",
				"TILEW"
			],
			[
				"CTA",
				"CTAX"
			],
			[
				"tilw",
				"TILEW"
			],
			[
				"til",
				"tileh"
			],
			[
				"chek",
				"CHECKCUDA"
			],
			[
				"che",
				"checkvalue"
			],
			[
				"st",
				"stoi"
			],
			[
				"e",
				"enableRandom"
			],
			[
				"ch",
				"checkvalue"
			],
			[
				"cume",
				"cudaMemcpyDeviceToHost"
			],
			[
				"ma",
				"maxpool"
			],
			[
				"len",
				"lenIn"
			],
			[
				"CHE",
				"checkCudaErrors"
			],
			[
				"ST",
				"status"
			],
			[
				"ve",
				"vector"
			],
			[
				"de",
				"degrees"
			],
			[
				"deg",
				"degree"
			],
			[
				"u",
				"uv"
			],
			[
				"h",
				"h_src"
			],
			[
				"size",
				"sizeof"
			],
			[
				"pa",
				"param"
			],
			[
				"filt",
				"filterStrideA"
			],
			[
				"convl",
				"convLayer"
			],
			[
				"spl",
				"splitMode"
			],
			[
				"wo",
				"woff"
			],
			[
				"set",
				"LayerSetUp"
			],
			[
				"el",
				"else"
			],
			[
				"offset",
				"memOffset"
			],
			[
				"para",
				"param"
			],
			[
				"G",
				"gm200"
			],
			[
				"spli",
				"split8NetParam"
			],
			[
				"Sp",
				"splitMode"
			],
			[
				"part",
				"part"
			],
			[
				"co",
				"copy2GPU"
			],
			[
				"odi",
				"odimFull"
			],
			[
				"dim",
				"dimM"
			],
			[
				"outp",
				"outputPart"
			],
			[
				"ful",
				"fullParam"
			],
			[
				"output",
				"OutputSize"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 490.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"c++",
				"Set Syntax: C++"
			]
		],
		"width": 703.0
	},
	"console":
	{
		"height": 122.0,
		"history":
		[
			"find",
			"ls",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/cygwin/home/alohal/cs231nHomework"
	],
	"file_history":
	[
		"/Y/imma/mycnn2/try1.h",
		"/Y/imma/mycnn2/main.cu",
		"/Y/imma/mycnn2/precompute_imma_super.cu",
		"/Y/cudaopt/pooling/run.sh",
		"/Y/cudaopt/pooling/makefile",
		"/Y/cudaopt/include/util.h",
		"/Y/cudaopt/pooling/c.sass",
		"/Y/cudaopt/pooling/check.sh",
		"/Y/cudaopt/pooling/pooling.cu",
		"/Y/cudaopt/b.sass",
		"/Y/cudaopt/a.sass",
		"/Y/cudaopt/pooling/d.sass",
		"/Y/cudaopt/pooling/test.sh",
		"/Y/cudaopt/biggemm/biggemm.cu",
		"/Y/cudaopt/gemmtest/convolutionGemm.cu",
		"/Y/cudaopt/pooling/17.sass",
		"/Y/cudaopt/pooling/27.sass",
		"/Y/cudaopt/pooling/17.cu",
		"/Y/cudaopt/pooling/allOK.cu",
		"/Y/cudaopt/pooling/1.sass",
		"/Y/cudaopt/pooling/30.sass",
		"/Y/cudaopt/pooling/26.sass",
		"/Y/cudaopt/pooling/28.sass",
		"/Y/cudaopt/pooling/29.sass",
		"/Y/cudaopt/pooling/2.sass",
		"/Y/cudaopt/include/cpuFunc.hxx",
		"/Y/cudaopt/splitLayer/makefile",
		"/Y/cudaopt/splitLayer/main.cu",
		"/Y/cudaopt/splitLayer/layers.hxx",
		"/Y/cudaopt/learn/con1.cu",
		"/Y/cudaopt/learn/conv2.cu",
		"/Y/cudaopt/learn/fft.cu",
		"/Y/cudaopt/learn/fftsolution.cu",
		"/Y/cudaopt/splitLayer/surround0831.cpp",
		"/Y/cudaopt/splitLayer/laneNet.cu",
		"/Y/cudaopt/splitLayer/surround0831.cu",
		"/Y/cudaopt/splitLayer/1.csv",
		"/Y/cudaopt/splitLayer/net.hxx",
		"/Y/cudaopt/splitLayer/1.log",
		"/Y/cudaopt/splitLayer/laneNet.cpp",
		"/Y/cudaopt/splitLayer/fp16.log",
		"/Y/cudaopt/learn/matrixTrans.cu",
		"/Y/cudaopt/learn/matrix2.cu",
		"/Y/cudaopt/learn/m2.cu",
		"/Y/cudaopt/splitLayer/model.py",
		"/Y/cudaopt/share32x8/sharegemm32x8.cu",
		"/Y/cudaopt/usefulCode/implicit gemm/conv2d_experimental_sgemm_kernel.hxx",
		"/Y/cudaopt/pooling/gm200.log",
		"/Y/cudaopt/pooling/gp10bmetrics.log",
		"/Y/cudaopt/implicitGEMM/imGemm.cu",
		"/Y/cudaopt/prologAnalysis/imGemm.cu",
		"/Y/cudaopt/prologAnalysis/ori.sass",
		"/Y/cudaopt/usefulCode/implicit gemm/conv2d_experimental_sgemm.cu",
		"/Y/cudaopt/usefulCode/implicit gemm/conv2d_experimental_gemm.hxx",
		"/Y/cudaopt/sublimePro/ownCode.sublime-project",
		"/Y/cudaopt/prologAnalysis/new.sass",
		"/Y/cudaopt/twoshare/makefile",
		"/Y/cudaopt/implicitGEMM/imGemmGeneral.cu",
		"/Y/cudaopt/pooling/b.sass",
		"/Y/cudaopt/implicitGEMM/imGemm.sass",
		"/Y/cudaopt/coding/code.c",
		"/Y/cudaopt/include/gpuFunc.hxx",
		"/Y/cudaopt/cudnnTest/main.cu",
		"/Y/cudaopt/test/haloCalc.c",
		"/Y/cudaopt/pooling/main.cu",
		"/Y/cudaopt/biascopy/biascopy.cu",
		"/Y/cudaopt/cudnnTest/net.hxx",
		"/Y/cudaopt/cudnnTest/makefile",
		"/Y/cudaopt/test/powf.sass",
		"/Y/cudaopt/cudnnTest/test.cu",
		"/Y/cudaopt/cudnnTest/layers.hxx",
		"/Y/cudaopt/cudnnTest/44.txt",
		"/Y/cudaopt/cudnnTest/aa.txt",
		"/Y/cudaopt/cudnnTest/66.txt",
		"/Y/cudaopt/cudnnTest/77.txt",
		"/Y/cudaopt/cudnnTest/55.txt",
		"/Y/cudaopt/cudnnTest/splitnet.cu",
		"/Y/cudaopt/cudnnTest/1.txt",
		"/Y/cudaopt/cudnnTest/3.txt",
		"/Y/cudaopt/cudnnTest/2.txt",
		"/Y/cudaopt/cudnnTest/4.txt",
		"/Y/cudaopt/cudnnTest/1.csv",
		"/Y/cudaopt/cudnnTest/a.csv",
		"/Y/cudaopt/cudnnTest/all.csv",
		"/Y/cudaopt/cudnnTest/all2.csv",
		"/Y/cudaopt/cudnnTest/all3.csv",
		"/Y/cudaopt/cudnnTest/12.csv",
		"/Y/cudaopt/cudnnTest/123.csv",
		"/Y/cudaopt/split.txt",
		"/Y/cudaopt/cudnnTest/cudnn.h",
		"/Y/cudaopt/script/autorun.py",
		"/Y/cudaopt/test/lrn.sass",
		"/Y/cudaopt/test/test.cu",
		"/Y/cudaopt/script/parsecsv.py",
		"/Y/cudaopt/pooling/util.h",
		"/Y/cudaopt/implicitGEMM/imGemm.hxx",
		"/Y/cudaopt/cudnnTest/lenet.cu",
		"/Y/cudaopt/implicitGEMM/makefile",
		"/Y/cudaopt/implicitGEMM/cpuFunc.hxx",
		"/Y/cudaopt/cudnnTest/cpuFunc.hxx",
		"/Y/cudaopt/script/driveNetNVPDM.txt",
		"/Y/cudaopt/script/NVHelNetNVPDM.txt",
		"/Y/cudaopt/usefulCode/cudnn-training-master/lenet.cu",
		"/Y/cudaopt/cudnnTest/util.h",
		"/Y/cudaopt/cudnnTest/layers.cu",
		"/Y/cudaopt/usefulCode/cudnn-training-master/makefile",
		"/Y/cudaopt/usefulCode/cudnn-training-master/splitnet.cu",
		"/Y/cudaopt/pooling/cpuFunc.hxx",
		"/Y/cudaopt/pooling/pool.cu",
		"/Y/cudaopt/script/gietest.py",
		"/Y/cudaopt/usefulCode/cudnn-training-master/softmax.cu",
		"/Y/cudaopt/usefulCode/cudnn-training-master/readubyte.cpp",
		"/Y/dittree/sw/gpgpu/MachineLearning/DIT/trunk/build-cuda-8.0/drivepx2/winograd/release/fp32im.sass",
		"/Y/dittree/sw/gpgpu/MachineLearning/DIT/trunk/build-cuda-8.0/drivepx2/winograd/release/fp16im.sass",
		"//shcompute-4/alohal-scratch/cudaopt/implicitGEMM/imGemmKernel.hxx",
		"//shcompute-4/alohal-scratch/cudaopt/implicitGEMM/cpuFunc.hxx",
		"//shcompute-4/alohal-scratch/cudaopt/implicitGEMM/a.sass",
		"//shcompute-4/alohal-scratch/cudaopt/implicitGEMM/4.sass",
		"//shcompute-4/alohal-scratch/cudaopt/usefulCode/implicit gemm/conv2d_experimental_gemm.hxx",
		"//shcompute-4/alohal-scratch/cudaopt/usefulCode/implicit gemm/conv2d_experimental_sgemm.cu",
		"//shcompute-4/alohal-scratch/cudaopt/implicitGEMM/1.sass",
		"/Y/dittree/sw/gpgpu/MachineLearning/cudnn/src/conv2d_implicit_sgemm_kernel.hxx",
		"//shcompute-4/alohal-scratch/cudaopt/smallNGemm/smallNgemm.cu",
		"//shcompute-4/alohal-scratch/cudaopt/implicitGEMM/test.py",
		"//shcompute-4/alohal-scratch/cudaopt/script/test.py",
		"//shcompute-4/alohal-scratch/cudaopt/script/occu.py",
		"//shcompute-4/alohal-scratch/cudaopt/smallNGemm/gemv",
		"//shcompute-4/alohal-scratch/cudaopt/smallNGemm/256x1.sass"
	],
	"find":
	{
		"height": 30.0
	},
	"find_in_files":
	{
		"height": 117.0,
		"where_history":
		[
			"*.cpp,*.h,*.cu,*.hpp,*.hxx",
			"*.cpp,*.h,*.cu,*.hpp",
			"C:\\Users\\alohal\\alohal_ALOHAL-LT_5316\\alohal_ALOHAL-LT_5316\\sw\\gpgpu\\MachineLearning\\DIT\\trunk",
			"C:\\Users\\alohal\\alohal_ALOHAL-LT_5316\\alohal_ALOHAL-LT_5316\\sw\\gpgpu\\MachineLearning\\DIT\\",
			"C:\\Users\\alohal\\alohal_ALOHAL-LT_5316\\alohal_ALOHAL-LT_5316\\sw\\gpgpu\\MachineLearning\\DIT\\trunk",
			"C:\\Users\\alohal\\alohal_ALOHAL-LT_5316\\alohal_ALOHAL-LT_5316\\sw\\gpgpu\\MachineLearning\\DIT",
			"*.cpp,*.h,*.cu,*.hpp",
			"*.cpp,*.h,*.cu",
			"C:\\Users\\alohal\\alohal_ALOHAL-LT_5316\\alohal_ALOHAL-LT_5316\\sw\\gpgpu\\MachineLearning\\DIT\\",
			"*.cpp,*.h,*.cu",
			"C:\\Users\\alohal\\alohal_ALOHAL-LT_5316\\alohal_ALOHAL-LT_5316\\sw\\gpgpu\\MachineLearning\\DIT\\externals",
			"C:\\Users\\alohal\\alohal_ALOHAL-LT_5316\\alohal_ALOHAL-LT_5316\\sw\\gpgpu\\MachineLearning\\DIT\\",
			"*.cpp,*.h,*.cu",
			"*.cpp,*.h",
			"C:\\Users\\alohal\\alohal_ALOHAL-LT_5316\\alohal_ALOHAL-LT_5316\\sw\\gpgpu\\MachineLearning\\DIT\\",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"n",
			"init_mem",
			"output_p",
			"kernel_c2",
			"output_p",
			"cout",
			"_cuda.tgz",
			"cuda.tgz",
			"/",
			"vector",
			"endl",
			"cout",
			"string",
			"cout",
			"poolGPU",
			"maxpool",
			"stg_hpos",
			"2593",
			"6305",
			"dst_stg",
			"stg_hpos",
			"dst_stg",
			"maxpool3x3uv2",
			"tV",
			"tU",
			"maxpool3x3uv1",
			"SMEM_W",
			"maxpool3x3uv1",
			"tV",
			"tU",
			"maxpool3x3",
			"accu",
			"32",
			"tP",
			"dst_stg",
			"inputW",
			"32",
			"smem_width",
			"BRA",
			"tU",
			"smem_width",
			"tU",
			"maxpool3x3",
			"full_thread_idx",
			"tP",
			"maxpool3x3",
			"smem_sts",
			"maxpool3x3",
			"hpos",
			"tC",
			"XMAD",
			"R4",
			"R27",
			"R18",
			"short",
			"threadIdx",
			"short",
			"maxpool3x3",
			"BRA",
			"R13",
			"idim",
			"SYNC",
			"new_height",
			"SEL",
			"sel",
			"SYNC",
			"SEL",
			"FMNMX",
			"SYNC",
			"BAR.SYNC",
			"SYNC",
			"width",
			"inputH",
			"bank",
			"maxpool3x3",
			"uv",
			"width",
			" \n",
			"STG",
			"maxpool3x3",
			"loopcnt",
			"maxpool3x3",
			"poolGPU",
			"maxpool3x3",
			"smem_w",
			"warpid",
			"warpid%2",
			"maxpool3x3",
			"poolGPU",
			" ;",
			"\n\t\t\t\t",
			"\t\t\t\t\n",
			"min",
			"__syncthreads",
			"LDS",
			"LDG",
			"maxpool3x3",
			"maxpool",
			"conv_Kernel",
			"conv_shared_Kernel",
			"conv_Kernel",
			"nTPB",
			"conv_Kernel",
			"cudnnSetConvolution2dDescriptor",
			"hyperParam",
			"surround0831",
			"params_",
			"split8NetParam",
			"drive",
			"split8NetParam",
			"0",
			"simpleNetParam",
			"split8NetParam",
			"part",
			"getMemOffset",
			"DATA",
			"data",
			"DATA",
			"buildNet",
			"[forward],",
			"laneNet",
			"surround0831",
			"split8NetParam",
			"param_split",
			"DIVIDEW",
			"picH",
			"surround0831",
			"tileX"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			" ",
			"",
			"_",
			"std::vector",
			"std::endl",
			"std::cout",
			"inputW",
			"threadIdx.x",
			"laneNet",
			"hpos",
			"wpos",
			"isEdgePart",
			"isEdgepart",
			"1024",
			"memory_size",
			"'suc'",
			"suc",
			"pre",
			"son",
			"'predecessor'",
			"nkqp",
			"pool",
			"fp16",
			"splitMode_",
			"ConvNum_",
			"ForwardCPU",
			"forwardCPU",
			"getMem()",
			"getBuf()",
			"part",
			"PARTS",
			"compareOnePart",
			"parent->",
			"layer->",
			"ctx_.",
			"buf",
			"ctx_",
			"ctx0->getHandle()",
			"->",
			"conv2",
			"conv1",
			"conv0",
			"Params",
			"getOutputdim",
			"Params",
			"]->",
			"poolP0->",
			"convP[0]->",
			"dataP0->",
			"LOG",
			"convP[2]",
			"convP[1]",
			"convP[0]",
			"filterDim",
			"dataDim",
			"conv1",
			"dtype",
			"convP1",
			"dataP0",
			"OutputGPU2",
			"dataP0",
			"workSize",
			"scratchSize",
			"float",
			"fp16",
			"float",
			"fp16",
			"LayerSetUp",
			"ASSERT",
			"getBuf()",
			"getTensor()",
			"ResultDim",
			"OutputGPU_2",
			"OutputGPU",
			"copy2GPU",
			"cudnnLayer<dtype>",
			"cudnnLayer<float>",
			"FORWARDCPU",
			"Region",
			"Regions",
			"Region",
			"getHandle()",
			"MemSize()",
			"GpuData()",
			"Blob",
			"B",
			"Blob",
			"batch",
			"out_",
			"mem1",
			"mem0",
			"conv0->",
			"ctx0->",
			"cudnnLayer",
			"convalgo",
			"convDesc",
			"filterDesc",
			"dstTensor",
			"srcTensor",
			"cudnnTensorDescriptor_t",
			"testCudnn",
			"dstdim",
			"srcdim",
			"src",
			"tW",
			"tH",
			"tS",
			"tR",
			"tV",
			"tU",
			"tQ",
			"tP",
			"tV",
			"tU",
			"tQ",
			"tP",
			"INPUT_PER_THREAD",
			"LDG_PER_THREAD",
			"BSmemWidth",
			"32",
			"blockIdx.x",
			"CRS",
			"7",
			"rs",
			"__half",
			"srca",
			"adim"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 196.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "cs231n.sublime-project",
	"replace":
	{
		"height": 56.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 304.0,
	"status_bar_visible": false,
	"template_settings":
	{
	}
}
